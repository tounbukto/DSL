package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_CapteurType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_CapteurType() {
    super(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a2fceL, "CapteurType", "r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624079822");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_DIGITAL_0 = new EnumerationDescriptor.MemberDescriptor("DIGITAL", "DIGITAL", 0x62cf56e9000a2fcfL, "r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624079823");
  private final EnumerationDescriptor.MemberDescriptor myMember_ANALOG_0 = new EnumerationDescriptor.MemberDescriptor("ANALOG", "ANALOG", 0x62cf56e9000a2fd1L, "r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624079825");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a2fceL, 0x62cf56e9000a2fcfL, 0x62cf56e9000a2fd1L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_DIGITAL_0, myMember_ANALOG_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return myMember_DIGITAL_0;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "DIGITAL":
        return myMember_DIGITAL_0;
      case "ANALOG":
        return myMember_ANALOG_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
