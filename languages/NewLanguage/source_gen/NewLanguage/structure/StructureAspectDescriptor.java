package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptActionneur = createDescriptorForActionneur();
  /*package*/ final ConceptDescriptor myConceptActuatorState = createDescriptorForActuatorState();
  /*package*/ final ConceptDescriptor myConceptApplication = createDescriptorForApplication();
  /*package*/ final ConceptDescriptor myConceptBaseTransaction = createDescriptorForBaseTransaction();
  /*package*/ final ConceptDescriptor myConceptBrick = createDescriptorForBrick();
  /*package*/ final ConceptDescriptor myConceptCapteur = createDescriptorForCapteur();
  /*package*/ final ConceptDescriptor myConceptPitchActuator = createDescriptorForPitchActuator();
  /*package*/ final ConceptDescriptor myConceptSensorComparisonTransaction = createDescriptorForSensorComparisonTransaction();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptTransaction = createDescriptorForTransaction();
  /*package*/ final ConceptDescriptor myConceptTransitionDelay = createDescriptorForTransitionDelay();
  /*package*/ final EnumerationDescriptor myEnumerationCapteurType = new EnumerationDescriptor_CapteurType();
  /*package*/ final EnumerationDescriptor myEnumerationCmpType = new EnumerationDescriptor_CmpType();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptActionneur, myConceptActuatorState, myConceptApplication, myConceptBaseTransaction, myConceptBrick, myConceptCapteur, myConceptPitchActuator, myConceptSensorComparisonTransaction, myConceptState, myConceptTransaction, myConceptTransitionDelay);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Actionneur:
        return myConceptActionneur;
      case LanguageConceptSwitch.ActuatorState:
        return myConceptActuatorState;
      case LanguageConceptSwitch.Application:
        return myConceptApplication;
      case LanguageConceptSwitch.BaseTransaction:
        return myConceptBaseTransaction;
      case LanguageConceptSwitch.Brick:
        return myConceptBrick;
      case LanguageConceptSwitch.Capteur:
        return myConceptCapteur;
      case LanguageConceptSwitch.PitchActuator:
        return myConceptPitchActuator;
      case LanguageConceptSwitch.SensorComparisonTransaction:
        return myConceptSensorComparisonTransaction;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.Transaction:
        return myConceptTransaction;
      case LanguageConceptSwitch.TransitionDelay:
        return myConceptTransitionDelay;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationCapteurType, myEnumerationCmpType);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForActionneur() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Actionneur", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a49e3L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Brick
    b.super_(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000abf07L);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624086499");
    b.version(3);
    b.property("value", 0x62cf56e9000a4a4cL).type(PrimitiveTypeId.STRING).origin("7120005094624086604").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActuatorState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ActuatorState", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x6be0c4403d48a0e3L);
    b.class_(false, false, false);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7773428737026597091");
    b.version(3);
    b.property("currentState", 0x6be0c4403d48a1ceL).type(PrimitiveTypeId.STRING).origin("7773428737026597326").done();
    b.associate("actuator", 0x6be0c4403d48a48eL).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a49e3L).optional(false).origin("7773428737026598030").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApplication() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Application", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000877d9L);
    b.class_(false, false, true);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094623967193");
    b.version(3);
    b.property("name", 0x62cf56e9000a22f5L).type(PrimitiveTypeId.STRING).origin("7120005094624076533").done();
    b.aggregate("capteurs", 0x62cf56e9000a1c3eL).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a270bL).optional(true).ordered(true).multiple(true).origin("7120005094624074814").done();
    b.aggregate("actionneurs", 0x62cf56e9000a425bL).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a49e3L).optional(true).ordered(true).multiple(true).origin("7120005094624084571").done();
    b.aggregate("states", 0x62cf56e9000a51c7L).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a589aL).optional(true).ordered(true).multiple(true).origin("7120005094624088519").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseTransaction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "BaseTransaction", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x6be0c4403d502098L);
    b.class_(false, false, false);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7773428737027088536");
    b.version(3);
    b.associate("state", 0x62cf56e9000a904cL).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a589aL).optional(true).origin("7120005094624104524").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBrick() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Brick", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000abf07L);
    b.class_(false, false, false);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624116487");
    b.version(3);
    b.property("name", 0x62cf56e9000abfbeL).type(PrimitiveTypeId.STRING).origin("7120005094624116670").done();
    b.property("broche", 0x62cf56e9000ac0f8L).type(PrimitiveTypeId.INTEGER).origin("7120005094624116984").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapteur() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Capteur", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a270bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Brick
    b.super_(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000abf07L);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624077579");
    b.version(3);
    b.property("value", 0x62cf56e9000a28c7L).type(PrimitiveTypeId.INTEGER).origin("7120005094624078023").done();
    b.property("type", 0x62cf56e9000a2befL).type(MetaIdFactory.dataTypeId(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a2fceL)).origin("7120005094624078831").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPitchActuator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "PitchActuator", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x6be0c4403d4cfdaeL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ActuatorState
    b.super_(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x6be0c4403d48a0e3L);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7773428737026882990");
    b.version(3);
    b.property("pitch", 0x6be0c4403d4d274bL).type(PrimitiveTypeId.INTEGER).origin("7773428737026893643").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSensorComparisonTransaction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "SensorComparisonTransaction", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a928aL);
    b.class_(false, false, false);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624105098");
    b.version(3);
    b.property("Value", 0x62cf56e9000a9e1fL).type(PrimitiveTypeId.STRING).origin("7120005094624108063").done();
    b.associate("sensor", 0x62cf56e9000ab5dfL).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a270bL).optional(false).origin("7120005094624114143").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "State", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a589aL);
    b.class_(false, false, false);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624090266");
    b.version(3);
    b.property("name", 0x62cf56e9000a58e9L).type(PrimitiveTypeId.STRING).origin("7120005094624090345").done();
    b.property("initial", 0x70fdfc205b84ed1cL).type(PrimitiveTypeId.BOOLEAN).origin("8141940917260315932").done();
    b.aggregate("transaction", 0x70fdfc205b84e540L).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a8d0bL).optional(true).ordered(true).multiple(false).origin("8141940917260313920").done();
    b.aggregate("actuatorState", 0x6be0c4403d489353L).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x6be0c4403d48a0e3L).optional(true).ordered(true).multiple(true).origin("7773428737026593619").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransaction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Transaction", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a8d0bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.BaseTransaction
    b.super_(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x6be0c4403d502098L);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7120005094624103691");
    b.version(3);
    b.aggregate("condition", 0x70fdfc205b84ea0dL).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a928aL).optional(true).ordered(true).multiple(false).origin("8141940917260315149").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransitionDelay() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "TransitionDelay", 0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x6be0c4403d4eeca6L);
    b.class_(false, false, false);
    b.origin("r:905d0be1-fff1-42bb-bb18-49da0f1243fb(NewLanguage.structure)/7773428737027009702");
    b.version(3);
    b.property("delay", 0x6be0c4403d4ef051L).type(PrimitiveTypeId.INTEGER).origin("7773428737027010641").done();
    b.associate("state", 0x6be0c4403d4ef6d7L).target(0x3129c9e0bc3c4036L, 0x815e27f12b196e5eL, 0x62cf56e9000a589aL).optional(true).origin("7773428737027012311").done();
    return b.create();
  }
}
